/* cuetalker.css */

main#cue-content {
  flex: 1;
  overflow-y: auto;
  padding: 1em;
  display: flex;
  flex-direction: column;
  gap: 0.75em;
  overflow-x: hidden;
  box-sizing: border-box;
}

.message {
  display: flex;
  align-items: flex-end;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
}

.message.speaker {
  justify-content: flex-start;
  flex-direction: row;
}

.message.user {
  justify-content: flex-end;
  flex-direction: row;
}

.message.user .avatar {
  order: 2;
  margin-left: 10px;
  margin-right: 0;
}

.message.user .bubble {
  order: 1;
}

.avatar {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 0 10px;

  /* üîí isolate transform to prevent layout shifts */
  transform-origin: center;
  will-change: transform;
  isolation: isolate;
}

.avatar .emoji {
  font-size: 48px;
}

.avatar .name {
  font-size: 0.9rem;
  color: #666666;
  font-weight: bold;
}

.bubble {
  position: relative;
  max-width: 80%;
  padding: 10px 14px;
  border-radius: 16px;
  line-height: 1.5;
  word-wrap: break-word;
  color: white;
  box-sizing: border-box;
  font-size: var(--message-font-size);
}

.bubble.left {
  background-color: var(--bubble-friend);
  margin-left: 5px;
  margin-bottom: 20px;
}

.bubble.right {
  background-color: var(--bubble-user);
  margin-right: 5px;
  margin-bottom: 20px;
}

.bubble.left::after {
  content: '';
  position: absolute;
  left: -9px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 10px 10px 10px 0;
  border-color: transparent var(--bubble-friend) transparent transparent;
}

.bubble.right::after {
  content: '';
  position: absolute;
  right: -9px;
  top: 50%;
  transform: translateY(-50%);
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 10px 0 10px 10px;
  border-color: transparent transparent transparent var(--bubble-user);
}

.bubble.right.correct {
  background-color: var(--bubble-user-correct);
}

.bubble.right.incorrect {
  background-color: var(--bubble-user-incorrect);
}

.bubble.right.correct::after {
  border-color: transparent transparent transparent var(--bubble-user-correct);
}

.bubble.right.incorrect::after {
  border-color: transparent transparent transparent var(--bubble-user-incorrect);
}

footer#cue-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1em 1em;
  background: white;
  box-shadow: 0 -1px 2px rgba(0,0,0,0.1);
}

#liveTranscript {
  flex: 1;
  margin-right: 1em;
  font-style: italic;
  color: #666;
}

.bubble.thought {
  background-color: var(--bubble-user);
  border: 2px solid #333;
  border-radius: 30px;
  padding: 20px;
  font-size: large;
  font-family: sans-serif;
  text-align: center;
  position: relative;
  max-width: 300px;
  margin: 10px;
  bottom: 16px;
  padding-right: 30px;
  left: -5px;
}

/* Optional: subtle variation to distinguish thought bubbles */
.bubble.thought {
  opacity: 0.9;
  font-style: italic;
}

/* Optional: add a ‚Äútail‚Äù like a cloud-like thought bubble */
.bubble.thought::after {
  content: '';
  position: absolute;
  right: -10px;
  bottom: -10px;
  width: 20px;
  height: 20px;
  background-color: var(--bubble-user);
  border: 2px solid #333;
  border-radius: 50%;
}

.bubble.thought::before {
  content: '';
  position: absolute;
  right: -25px;
  bottom: 18px;
  width: 15px;
  height: 15px;
  background-color: var(--bubble-user);
  border: 2px solid #333;
  border-radius: 50%;
}

.message.narration {
  display: flex;
  justify-content: center;
  margin: 20px 0;
}

.bubble.center {
  background-color: #4a90e2;
  color: white;
  font-style: italic;
  border-radius: 15px;
  padding: 10px 15px;
  font-size: var(--message-font-size);
  max-width: 80%;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

#micButton.recording {
  border: 2px solid red;
  background-color: #357ab8;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 5px red;
  }
  50% {
    box-shadow: 0 0 15px red;
  }
  100% {
    box-shadow: 0 0 5px red;
  }
}

#settingsMenu {
  position: fixed;
  top: 60px;
  height: 100vh;
  left: 0;
  right: 0;
  background: #f9f9f9;
  z-index: 1000;
  padding: 20px;
  display: none;
  overflow-y: auto;
}

/* Adjust its scope to only occupy <main>, not the whole page */
main {
  position: relative;
}

#settingsMenu.show {
  display: block;
}

#settingsMenu h2 {
  margin-top: 0;
  font-size: 1.5em;
}

.setting-row {
  display: flex;
  flex-direction: column;
  margin-bottom: 1em;
}

label.disabled {
  opacity: 0.5;
  pointer-events: none;
}

  @keyframes swipeInLeftBounce {
    0% {
      transform: translateX(-100%);
      opacity: 1;
    }
    60% {
      transform: translateX(15%);
      opacity: 1;
    }
    80% {
      transform: translateX(-5%);
    }
    100% {
      transform: translateX(0);
    }
  }
  
  @keyframes swipeInRightBounce {
    0% {
      transform: translateX(100%);
      opacity: 1;
    }
    60% {
      transform: translateX(-15%);
      opacity: 1;
    }
    80% {
      transform: translateX(5%);
    }
    100% {
      transform: translateX(0);
    }
  }
  
  .swipe-in-left {
    animation: swipeInLeftBounce 0.6s ease-out;
  }
  
  .swipe-in-right {
    animation: swipeInRightBounce 0.6s ease-out;
  }

    .rotate-shake {
    display: inline-block;
    animation: rotate-shake 0.5s ease-in-out;
  }
  
  @keyframes rotate-shake {
    0%, 100% { transform: rotate(0); }
    25% { transform: rotate(-10deg); }
    50% { transform: rotate(10deg); }
    75% { transform: rotate(-10deg); }
  }

  .shake {
    display: inline-block;
    animation: shake 0.5s ease-in-out;
  }
  
  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    20%, 60% { transform: translateX(-10px); }
    40%, 80% { transform: translateX(10px); }
  }

.response-fade-in {
  animation: borderFlash 0.8s ease-in-out;
}

@keyframes borderFlash {
  0% {
    border: 2px solid rgba(0, 255, 0, 0.7);
    opacity: 0;
  }
  50% {
    opacity: 1;
    border-color: rgba(0, 255, 0, 0.4);
  }
  100% {
    border-color: transparent;
  }
}
  
.bubble-wrapper {
  position: relative;
  display: inline-block;
  left: -20px;
  bottom: 25px;
}

.hint-bubble {
  position: relative;
  z-index: 1;
  max-width: 300px;
  padding: 20px 30px 20px 20px;
  background: transparent; /* background handled by bg-pulse layer */
  color: white;
  font-size: var(--message-font-size);
  font-family: sans-serif;
  text-align: center;
  font-style: italic;
  pointer-events: none; /* Prevents hint-bubble from blocking clicks if needed */
}

/* Animated background: matches the bubble shape */
.bubble-bg-pulse {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
  background-color: var(--bubble-user);
  border: 2px solid #333;
  border-radius: 30px;
  padding: 20px;
  box-sizing: border-box;
  animation: bubblePulse 1.2s ease-in-out infinite;
  transform-origin: center;
}

/* Match tail using pseudo-elements */
.bubble-bg-pulse::after {
  content: '';
  position: absolute;
  right: -10px;
  bottom: 26px;
  width: 20px;
  height: 20px;
  background-color: var(--bubble-user);
  border: 2px solid #333;
  border-radius: 50%;
}

.bubble-bg-pulse::before {
  content: '';
  position: absolute;
  right: -25px;
  bottom: 24px;
  width: 15px;
  height: 15px;
  background-color: var(--bubble-user);
  border: 2px solid #333;
  border-radius: 50%;
}

@keyframes bubblePulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
}

.wrong-word {
  color: red;
  font-weight: bold;
}

.svg-avatar {
  width: 60px;
  height: 60px;
  display: block;
  margin: 0 auto;
}

.font-preview {
  background: white;
  padding: 10px 14px;
  border-radius: 16px;
  line-height: 1.5;
  word-wrap: break-word;
  box-shadow: 0 1px 4px rgba(0,0,0,0.1);
  border: 1px solid #ccc;
  margin-top: 8px;
}

#modeSelector {
  margin-right: auto;
}

.mode-selector {
  display: flex;
  flex-direction: column;
  gap: 6px;
  margin-left: 10px; /* üî• Push it away from the left edge */
  margin-right: auto; /* üî• Align it LEFT within the footer */
}

.mode-selector label {
  display: flex;
  align-items: center;
  gap: 6px;
}

#cue-footer.locked .mode-selector {
  display: none;
}
